

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 02 22:42:15 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25  0000                     
    26                           ; Generated 06/04/2022 GMT
    27                           ; 
    28                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F26K20 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     
    61 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
    62  0000                     
    63 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
    64  0000                     
    65 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
    66  0000                     _TXREG	set	4013
    67  0000                     _RCREG	set	4014
    68  0000                     _SPBRG	set	4015
    69  0000                     _TXSTA	set	4012
    70                           
    71                           	psect	nvCOMRAM
    72  00000C                     __pnvCOMRAM:
    73                           	callstack 0
    74  00000C                     _EUSART_ErrorHandler:
    75                           	callstack 0
    76  00000C                     	ds	2
    77  00000E                     _EUSART_OverrunErrorHandler:
    78                           	callstack 0
    79  00000E                     	ds	2
    80  000010                     _EUSART_FramingErrorHandler:
    81                           	callstack 0
    82  000010                     	ds	2
    83  0000                     _LATBbits	set	3978
    84  0000                     _RCSTAbits	set	4011
    85  0000                     _TXSTAbits	set	4012
    86  0000                     _WPUB	set	3964
    87  0000                     _ANSEL	set	3966
    88  0000                     _LATA	set	3977
    89  0000                     _TRISA	set	3986
    90  0000                     _LATC	set	3979
    91  0000                     _LATB	set	3978
    92  0000                     _OSCTUNE	set	3995
    93  0000                     _OSCCON	set	4051
    94  0000                     _INTCON2bits	set	4081
    95  0000                     _TRISC	set	3988
    96  0000                     _TRISB	set	3987
    97  0000                     _ANSELH	set	3967
    98  0000                     _INTCONbits	set	4082
    99  0000                     _PIR1bits	set	3998
   100  0000                     _RCSTA	set	4011
   101  0000                     _BAUDCON	set	4024
   102  0000                     _SPBRGH	set	4016
   103                           
   104                           	psect	smallconst
   105  001000                     __psmallconst:
   106                           	callstack 0
   107  001000  00                 	db	0
   108  001001                     STR_2:
   109  001001  50                 	db	80	;'P'
   110  001002  72                 	db	114	;'r'
   111  001003  65                 	db	101	;'e'
   112  001004  73                 	db	115	;'s'
   113  001005  73                 	db	115	;'s'
   114  001006  20                 	db	32
   115  001007  31                 	db	49	;'1'
   116  001008  20                 	db	32
   117  001009  66                 	db	102	;'f'
   118  00100A  6F                 	db	111	;'o'
   119  00100B  72                 	db	114	;'r'
   120  00100C  20                 	db	32
   121  00100D  52                 	db	82	;'R'
   122  00100E  65                 	db	101	;'e'
   123  00100F  64                 	db	100	;'d'
   124  001010  2C                 	db	44
   125  001011  20                 	db	32
   126  001012  32                 	db	50	;'2'
   127  001013  20                 	db	32
   128  001014  66                 	db	102	;'f'
   129  001015  6F                 	db	111	;'o'
   130  001016  72                 	db	114	;'r'
   131  001017  20                 	db	32
   132  001018  59                 	db	89	;'Y'
   133  001019  65                 	db	101	;'e'
   134  00101A  6C                 	db	108	;'l'
   135  00101B  6C                 	db	108	;'l'
   136  00101C  6F                 	db	111	;'o'
   137  00101D  77                 	db	119	;'w'
   138  00101E  2C                 	db	44
   139  00101F  20                 	db	32
   140  001020  33                 	db	51	;'3'
   141  001021  20                 	db	32
   142  001022  66                 	db	102	;'f'
   143  001023  6F                 	db	111	;'o'
   144  001024  72                 	db	114	;'r'
   145  001025  20                 	db	32
   146  001026  47                 	db	71	;'G'
   147  001027  72                 	db	114	;'r'
   148  001028  65                 	db	101	;'e'
   149  001029  65                 	db	101	;'e'
   150  00102A  6E                 	db	110	;'n'
   151  00102B  20                 	db	32
   152  00102C  2E                 	db	46
   153  00102D  2E                 	db	46
   154  00102E  2E                 	db	46
   155  00102F  20                 	db	32
   156  001030  0A                 	db	10
   157  001031  00                 	db	0
   158  001032                     STR_1:
   159  001032  57                 	db	87	;'W'
   160  001033  65                 	db	101	;'e'
   161  001034  6C                 	db	108	;'l'
   162  001035  63                 	db	99	;'c'
   163  001036  6F                 	db	111	;'o'
   164  001037  6D                 	db	109	;'m'
   165  001038  65                 	db	101	;'e'
   166  001039  20                 	db	32
   167  00103A  74                 	db	116	;'t'
   168  00103B  6F                 	db	111	;'o'
   169  00103C  20                 	db	32
   170  00103D  43                 	db	67	;'C'
   171  00103E  4F                 	db	79	;'O'
   172  00103F  33                 	db	51	;'3'
   173  001040  32                 	db	50	;'2'
   174  001041  36                 	db	54	;'6'
   175  001042  20                 	db	32
   176  001043  4C                 	db	76	;'L'
   177  001044  61                 	db	97	;'a'
   178  001045  62                 	db	98	;'b'
   179  001046  33                 	db	51	;'3'
   180  001047  00                 	db	0
   181  001048                     STR_3:
   182  001048  0A                 	db	10
   183  001049  20                 	db	32
   184  00104A  0D                 	db	13
   185  00104B  00                 	db	0
   186  00104C  00                 	db	0	; dummy byte at the end
   187  0000                     
   188                           ; #config settings
   189                           
   190                           	psect	cinit
   191  0011F6                     __pcinit:
   192                           	callstack 0
   193  0011F6                     start_initialization:
   194                           	callstack 0
   195  0011F6                     __initialization:
   196                           	callstack 0
   197                           
   198                           ; Clear objects allocated to COMRAM (2 bytes)
   199  0011F6  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
   200  0011F8  6A12               	clrf	__pbssCOMRAM& (0+255),c
   201  0011FA                     end_of_initialization:
   202                           	callstack 0
   203  0011FA                     __end_of__initialization:
   204                           	callstack 0
   205  0011FA  0100               	movlb	0
   206  0011FC  EF27  F008         	goto	_main	;jump to C main() function
   207                           
   208                           	psect	bssCOMRAM
   209  000012                     __pbssCOMRAM:
   210                           	callstack 0
   211  000012                     _data:
   212                           	callstack 0
   213  000012                     	ds	1
   214  000013                     _eusartRxLastError:
   215                           	callstack 0
   216  000013                     	ds	1
   217                           
   218                           	psect	cstackCOMRAM
   219  000001                     __pcstackCOMRAM:
   220                           	callstack 0
   221  000001                     EUSART_Write@txData:
   222                           	callstack 0
   223  000001                     EUSART_SetFramingErrorHandler@interruptHandler:
   224                           	callstack 0
   225  000001                     EUSART_SetOverrunErrorHandler@interruptHandler:
   226                           	callstack 0
   227  000001                     EUSART_SetErrorHandler@interruptHandler:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x0
   231  000001                     	ds	1
   232  000002                     send_string@x:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x1
   236  000002                     	ds	1
   237  000003                     
   238                           ; 1 bytes @ 0x2
   239  000003                     	ds	1
   240  000004                     ??_main:
   241                           
   242                           ; 1 bytes @ 0x3
   243  000004                     	ds	2
   244  000006                     main@welcome_msg1:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x5
   248  000006                     	ds	2
   249  000008                     main@welcome_msg2:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x7
   253  000008                     	ds	2
   254  00000A                     main@add_line:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x9
   258  00000A                     	ds	2
   259                           
   260 ;;
   261 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   262 ;;
   263 ;; *************** function _main *****************
   264 ;; Defined at:
   265 ;;		line 58 in file "main.c"
   266 ;; Parameters:    Size  Location     Type
   267 ;;		None
   268 ;; Auto vars:     Size  Location     Type
   269 ;;  add_line        2    9[COMRAM] PTR unsigned char 
   270 ;;		 -> STR_3(4), 
   271 ;;  welcome_msg2    2    7[COMRAM] PTR unsigned char 
   272 ;;		 -> STR_2(49), 
   273 ;;  welcome_msg1    2    5[COMRAM] PTR unsigned char 
   274 ;;		 -> STR_1(22), 
   275 ;; Return value:  Size  Location     Type
   276 ;;                  1    wreg      void 
   277 ;; Registers used:
   278 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   279 ;; Tracked objects:
   280 ;;		On entry : 0/0
   281 ;;		On exit  : 0/0
   282 ;;		Unchanged: 0/0
   283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   285 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   286 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   287 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   288 ;;Total ram usage:        8 bytes
   289 ;; Hardware stack levels required when called: 3
   290 ;; This function calls:
   291 ;;		_EUSART_Read
   292 ;;		_SYSTEM_Initialize
   293 ;;		_send_string
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text0
   300  00104E                     __ptext0:
   301                           	callstack 0
   302  00104E                     _main:
   303                           	callstack 28
   304  00104E                     
   305                           ;main.c: 61:     SYSTEM_Initialize();
   306  00104E  ECF4  F008         	call	_SYSTEM_Initialize	;wreg free
   307  001052                     
   308                           ;main.c: 79:     char * welcome_msg1= "Welcome to CO326 Lab3";
   309  001052  0E32               	movlw	low STR_1
   310  001054  6E06               	movwf	main@welcome_msg1^0,c
   311  001056  0E10               	movlw	high STR_1
   312  001058  6E07               	movwf	(main@welcome_msg1+1)^0,c
   313  00105A                     
   314                           ;main.c: 80:     char * welcome_msg2= "Press 1 for Red, 2 for Yellow, 3 for Green ... \n
      +                          ";
   315  00105A  0E01               	movlw	low STR_2
   316  00105C  6E08               	movwf	main@welcome_msg2^0,c
   317  00105E  0E10               	movlw	high STR_2
   318  001060  6E09               	movwf	(main@welcome_msg2+1)^0,c
   319  001062                     
   320                           ;main.c: 81:     char * add_line="\n \r";
   321  001062  0E48               	movlw	low STR_3
   322  001064  6E0A               	movwf	main@add_line^0,c
   323  001066  0E10               	movlw	high STR_3
   324  001068  6E0B               	movwf	(main@add_line+1)^0,c
   325  00106A                     
   326                           ;main.c: 84:     send_string(welcome_msg1);
   327  00106A  C006  F002         	movff	main@welcome_msg1,send_string@x
   328  00106E  C007  F003         	movff	main@welcome_msg1+1,send_string@x+1
   329  001072  ECA5  F008         	call	_send_string	;wreg free
   330  001076                     
   331                           ;main.c: 85:     send_string(add_line);
   332  001076  C00A  F002         	movff	main@add_line,send_string@x
   333  00107A  C00B  F003         	movff	main@add_line+1,send_string@x+1
   334  00107E  ECA5  F008         	call	_send_string	;wreg free
   335  001082                     
   336                           ;main.c: 86:     _delay((unsigned long)((500)*(8000000/4000.0)));
   337  001082  0E06               	movlw	6
   338  001084  6E05               	movwf	(??_main+1)^0,c
   339  001086  0E13               	movlw	19
   340  001088  6E04               	movwf	??_main^0,c
   341  00108A  0EAE               	movlw	174
   342  00108C                     u87:
   343  00108C  2EE8               	decfsz	wreg,f,c
   344  00108E  D7FE               	bra	u87
   345  001090  2E04               	decfsz	??_main^0,f,c
   346  001092  D7FC               	bra	u87
   347  001094  2E05               	decfsz	(??_main+1)^0,f,c
   348  001096  D7FA               	bra	u87
   349  001098                     
   350                           ;main.c: 87:     send_string(welcome_msg2);
   351  001098  C008  F002         	movff	main@welcome_msg2,send_string@x
   352  00109C  C009  F003         	movff	main@welcome_msg2+1,send_string@x+1
   353  0010A0  ECA5  F008         	call	_send_string	;wreg free
   354  0010A4                     
   355                           ;main.c: 88:     send_string(add_line);
   356  0010A4  C00A  F002         	movff	main@add_line,send_string@x
   357  0010A8  C00B  F003         	movff	main@add_line+1,send_string@x+1
   358  0010AC  ECA5  F008         	call	_send_string	;wreg free
   359  0010B0                     l1002:
   360                           
   361                           ;main.c: 91:     {;main.c: 95:         data=EUSART_Read();
   362  0010B0  ECC2  F008         	call	_EUSART_Read	;wreg free
   363  0010B4  6E12               	movwf	_data^0,c
   364                           
   365                           ;main.c: 98:         switch (data) {
   366  0010B6  EF6B  F008         	goto	l1006
   367  0010BA                     l158:
   368  0010BA  808A               	bsf	138,0,c	;volatile
   369  0010BC  EF58  F008         	goto	l1002
   370  0010C0                     l162:
   371  0010C0  828A               	bsf	138,1,c	;volatile
   372  0010C2  EF58  F008         	goto	l1002
   373  0010C6                     l165:
   374  0010C6  848A               	bsf	138,2,c	;volatile
   375  0010C8  EF58  F008         	goto	l1002
   376  0010CC                     l168:
   377  0010CC  908A               	bcf	138,0,c	;volatile
   378  0010CE  928A               	bcf	138,1,c	;volatile
   379  0010D0  948A               	bcf	138,2,c	;volatile
   380  0010D2  EF58  F008         	goto	l1002
   381  0010D6                     l1006:
   382  0010D6  5012               	movf	_data^0,w,c
   383  0010D8  6E04               	movwf	??_main^0,c
   384  0010DA  6A05               	clrf	(??_main+1)^0,c
   385                           
   386                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   387                           ; Switch size 1, requested type "simple"
   388                           ; Number of cases is 1, Range of values is 0 to 0
   389                           ; switch strategies available:
   390                           ; Name         Instructions Cycles
   391                           ; simple_byte            4     3 (average)
   392                           ;	Chosen strategy is simple_byte
   393  0010DC  5005               	movf	(??_main+1)^0,w,c
   394  0010DE  0A00               	xorlw	0	; case 0
   395  0010E0  B4D8               	btfsc	status,2,c
   396  0010E2  EF75  F008         	goto	l1016
   397  0010E6  EF66  F008         	goto	l168
   398  0010EA                     l1016:
   399                           
   400                           ; Switch size 1, requested type "simple"
   401                           ; Number of cases is 3, Range of values is 49 to 51
   402                           ; switch strategies available:
   403                           ; Name         Instructions Cycles
   404                           ; simple_byte           10     6 (average)
   405                           ;	Chosen strategy is simple_byte
   406  0010EA  5004               	movf	??_main^0,w,c
   407  0010EC  0A31               	xorlw	49	; case 49
   408  0010EE  B4D8               	btfsc	status,2,c
   409  0010F0  EF5D  F008         	goto	l158
   410  0010F4  0A03               	xorlw	3	; case 50
   411  0010F6  B4D8               	btfsc	status,2,c
   412  0010F8  EF60  F008         	goto	l162
   413  0010FC  0A01               	xorlw	1	; case 51
   414  0010FE  B4D8               	btfsc	status,2,c
   415  001100  EF63  F008         	goto	l165
   416  001104  EF66  F008         	goto	l168
   417  001108  EF00  F000         	goto	start
   418  00110C                     __end_of_main:
   419                           	callstack 0
   420                           
   421 ;; *************** function _send_string *****************
   422 ;; Defined at:
   423 ;;		line 52 in file "main.c"
   424 ;; Parameters:    Size  Location     Type
   425 ;;  x               2    1[COMRAM] PTR const unsigned char 
   426 ;;		 -> STR_3(4), STR_2(49), STR_1(22), 
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   441 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   442 ;;Total ram usage:        2 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; Hardware stack levels required when called: 1
   445 ;; This function calls:
   446 ;;		_EUSART_Write
   447 ;; This function is called by:
   448 ;;		_main
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text1
   453  00114A                     __ptext1:
   454                           	callstack 0
   455  00114A                     _send_string:
   456                           	callstack 29
   457  00114A                     
   458                           ;main.c: 53:     while (*x){
   459  00114A  EFB2  F008         	goto	l982
   460  00114E                     l978:
   461                           
   462                           ;main.c: 54:         EUSART_Write(*x++);
   463  00114E  C002  FFF6         	movff	send_string@x,tblptrl
   464  001152  C003  FFF7         	movff	send_string@x+1,tblptrh
   465  001156                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   466  001156  6AF8               	clrf	tblptru,c
   467  001158                     	endif
   468  001158                     	if	0	;tblptru may be non-zero
   469  001158                     	endif
   470  001158  0008               	tblrd		*
   471  00115A  50F5               	movf	tablat,w,c
   472  00115C  ECE9  F008         	call	_EUSART_Write
   473  001160  4A02               	infsnz	send_string@x^0,f,c
   474  001162  2A03               	incf	(send_string@x+1)^0,f,c
   475  001164                     l982:
   476                           
   477                           ;main.c: 53:     while (*x){
   478  001164  C002  FFF6         	movff	send_string@x,tblptrl
   479  001168  C003  FFF7         	movff	send_string@x+1,tblptrh
   480  00116C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   481  00116C  6AF8               	clrf	tblptru,c
   482  00116E                     	endif
   483  00116E                     	if	0	;tblptru may be non-zero
   484  00116E                     	endif
   485  00116E  0008               	tblrd		*
   486  001170  50F5               	movf	tablat,w,c
   487  001172  0900               	iorlw	0
   488  001174  A4D8               	btfss	status,2,c
   489  001176  EFBF  F008         	goto	u71
   490  00117A  EFC1  F008         	goto	u70
   491  00117E                     u71:
   492  00117E  EFA7  F008         	goto	l978
   493  001182                     u70:
   494  001182  0012               	return		;funcret
   495  001184                     __end_of_send_string:
   496                           	callstack 0
   497                           
   498 ;; *************** function _EUSART_Write *****************
   499 ;; Defined at:
   500 ;;		line 132 in file "mcc_generated_files/eusart.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  txData          1    wreg     unsigned char 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  txData          1    0[COMRAM] unsigned char 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   518 ;;Total ram usage:        1 bytes
   519 ;; Hardware stack levels used: 1
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_send_string
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text2
   528  0011D2                     __ptext2:
   529                           	callstack 0
   530  0011D2                     _EUSART_Write:
   531                           	callstack 29
   532                           
   533                           ;incstack = 0
   534                           ;EUSART_Write@txData stored from wreg
   535  0011D2  6E01               	movwf	EUSART_Write@txData^0,c
   536  0011D4                     l111:
   537                           
   538                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
   539  0011D4  A89E               	btfss	158,4,c	;volatile
   540  0011D6  EFEF  F008         	goto	u11
   541  0011DA  EFF1  F008         	goto	u10
   542  0011DE                     u11:
   543  0011DE  EFEA  F008         	goto	l111
   544  0011E2                     u10:
   545  0011E2                     
   546                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
   547  0011E2  C001  FFAD         	movff	EUSART_Write@txData,4013	;volatile
   548  0011E6  0012               	return		;funcret
   549  0011E8                     __end_of_EUSART_Write:
   550                           	callstack 0
   551                           
   552 ;; *************** function _SYSTEM_Initialize *****************
   553 ;; Defined at:
   554 ;;		line 50 in file "mcc_generated_files/mcc.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;		None
   557 ;; Auto vars:     Size  Location     Type
   558 ;;		None
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0, cstack
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;Total ram usage:        0 bytes
   573 ;; Hardware stack levels used: 1
   574 ;; Hardware stack levels required when called: 2
   575 ;; This function calls:
   576 ;;		_EUSART_Initialize
   577 ;;		_OSCILLATOR_Initialize
   578 ;;		_PIN_MANAGER_Initialize
   579 ;; This function is called by:
   580 ;;		_main
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text3
   585  0011E8                     __ptext3:
   586                           	callstack 0
   587  0011E8                     _SYSTEM_Initialize:
   588                           	callstack 28
   589  0011E8                     
   590                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   591  0011E8  ECD6  F008         	call	_PIN_MANAGER_Initialize	;wreg free
   592                           
   593                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   594  0011EC  EC00  F009         	call	_OSCILLATOR_Initialize	;wreg free
   595  0011F0                     
   596                           ;mcc_generated_files/mcc.c: 55:     EUSART_Initialize();
   597  0011F0  EC86  F008         	call	_EUSART_Initialize	;wreg free
   598  0011F4  0012               	return		;funcret
   599  0011F6                     __end_of_SYSTEM_Initialize:
   600                           	callstack 0
   601                           
   602 ;; *************** function _PIN_MANAGER_Initialize *****************
   603 ;; Defined at:
   604 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; This function calls:
   625 ;;		Nothing
   626 ;; This function is called by:
   627 ;;		_SYSTEM_Initialize
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text4
   632  0011AC                     __ptext4:
   633                           	callstack 0
   634  0011AC                     _PIN_MANAGER_Initialize:
   635                           	callstack 29
   636  0011AC                     
   637                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
   638  0011AC  0E00               	movlw	0
   639  0011AE  6E89               	movwf	137,c	;volatile
   640                           
   641                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
   642  0011B0  0E00               	movlw	0
   643  0011B2  6E8A               	movwf	138,c	;volatile
   644                           
   645                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
   646  0011B4  0E00               	movlw	0
   647  0011B6  6E8B               	movwf	139,c	;volatile
   648  0011B8                     
   649                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xFF;
   650  0011B8  6892               	setf	146,c	;volatile
   651                           
   652                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF8;
   653  0011BA  0EF8               	movlw	248
   654  0011BC  6E93               	movwf	147,c	;volatile
   655                           
   656                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xBF;
   657  0011BE  0EBF               	movlw	191
   658  0011C0  6E94               	movwf	148,c	;volatile
   659                           
   660                           ;mcc_generated_files/pin_manager.c: 74:     ANSEL = 0x1F;
   661  0011C2  0E1F               	movlw	31
   662  0011C4  6E7E               	movwf	126,c	;volatile
   663                           
   664                           ;mcc_generated_files/pin_manager.c: 75:     ANSELH = 0x1F;
   665  0011C6  0E1F               	movlw	31
   666  0011C8  6E7F               	movwf	127,c	;volatile
   667                           
   668                           ;mcc_generated_files/pin_manager.c: 80:     WPUB = 0x00;
   669  0011CA  0E00               	movlw	0
   670  0011CC  6E7C               	movwf	124,c	;volatile
   671  0011CE                     
   672                           ;mcc_generated_files/pin_manager.c: 81:     INTCON2bits.nRBPU = 1;
   673  0011CE  8EF1               	bsf	241,7,c	;volatile
   674  0011D0  0012               	return		;funcret
   675  0011D2                     __end_of_PIN_MANAGER_Initialize:
   676                           	callstack 0
   677                           
   678 ;; *************** function _OSCILLATOR_Initialize *****************
   679 ;; Defined at:
   680 ;;		line 58 in file "mcc_generated_files/mcc.c"
   681 ;; Parameters:    Size  Location     Type
   682 ;;		None
   683 ;; Auto vars:     Size  Location     Type
   684 ;;		None
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      void 
   687 ;; Registers used:
   688 ;;		wreg, status,2
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;Total ram usage:        0 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; This function calls:
   701 ;;		Nothing
   702 ;; This function is called by:
   703 ;;		_SYSTEM_Initialize
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text5
   708  001200                     __ptext5:
   709                           	callstack 0
   710  001200                     _OSCILLATOR_Initialize:
   711                           	callstack 29
   712  001200                     
   713                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x62;
   714  001200  0E62               	movlw	98
   715  001202  6ED3               	movwf	211,c	;volatile
   716                           
   717                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
   718  001204  0E00               	movlw	0
   719  001206  6E9B               	movwf	155,c	;volatile
   720  001208  0012               	return		;funcret
   721  00120A                     __end_of_OSCILLATOR_Initialize:
   722                           	callstack 0
   723                           
   724 ;; *************** function _EUSART_Initialize *****************
   725 ;; Defined at:
   726 ;;		line 66 in file "mcc_generated_files/eusart.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;		None
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      void 
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;Total ram usage:        0 bytes
   745 ;; Hardware stack levels used: 1
   746 ;; Hardware stack levels required when called: 1
   747 ;; This function calls:
   748 ;;		_EUSART_SetErrorHandler
   749 ;;		_EUSART_SetFramingErrorHandler
   750 ;;		_EUSART_SetOverrunErrorHandler
   751 ;; This function is called by:
   752 ;;		_SYSTEM_Initialize
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text6
   757  00110C                     __ptext6:
   758                           	callstack 0
   759  00110C                     _EUSART_Initialize:
   760                           	callstack 28
   761  00110C                     
   762                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
   763  00110C  0E08               	movlw	8
   764  00110E  6EB8               	movwf	184,c	;volatile
   765                           
   766                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
   767  001110  0E90               	movlw	144
   768  001112  6EAB               	movwf	171,c	;volatile
   769                           
   770                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
   771  001114  0E24               	movlw	36
   772  001116  6EAC               	movwf	172,c	;volatile
   773                           
   774                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0xCF;
   775  001118  0ECF               	movlw	207
   776  00111A  6EAF               	movwf	175,c	;volatile
   777                           
   778                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
   779  00111C  0E00               	movlw	0
   780  00111E  6EB0               	movwf	176,c	;volatile
   781  001120                     
   782                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
   783  001120  0E00               	movlw	0
   784  001122  6E01               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
   785  001124  0E00               	movlw	0
   786  001126  6E02               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
   787  001128  EC0A  F009         	call	_EUSART_SetFramingErrorHandler	;wreg free
   788  00112C                     
   789                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
   790  00112C  0E00               	movlw	0
   791  00112E  6E01               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
   792  001130  0E00               	movlw	0
   793  001132  6E02               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
   794  001134  EC05  F009         	call	_EUSART_SetOverrunErrorHandler	;wreg free
   795  001138                     
   796                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
   797  001138  0E00               	movlw	0
   798  00113A  6E01               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
   799  00113C  0E00               	movlw	0
   800  00113E  6E02               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
   801  001140  EC0F  F009         	call	_EUSART_SetErrorHandler	;wreg free
   802  001144                     
   803                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
   804  001144  0E00               	movlw	0
   805  001146  6E13               	movwf	_eusartRxLastError^0,c	;volatile
   806  001148  0012               	return		;funcret
   807  00114A                     __end_of_EUSART_Initialize:
   808                           	callstack 0
   809                           
   810 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
   811 ;; Defined at:
   812 ;;		line 161 in file "mcc_generated_files/eusart.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   815 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   827 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   830 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   831 ;;Total ram usage:        2 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_EUSART_Initialize
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           
   840                           	psect	text7
   841  00120A                     __ptext7:
   842                           	callstack 0
   843  00120A                     _EUSART_SetOverrunErrorHandler:
   844                           	callstack 28
   845  00120A                     
   846                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
   847  00120A  C001  F00E         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
   848  00120E  C002  F00F         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
   849  001212  0012               	return		;funcret
   850  001214                     __end_of_EUSART_SetOverrunErrorHandler:
   851                           	callstack 0
   852                           
   853 ;; *************** function _EUSART_SetFramingErrorHandler *****************
   854 ;; Defined at:
   855 ;;		line 157 in file "mcc_generated_files/eusart.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   858 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;		None
   861 ;; Return value:  Size  Location     Type
   862 ;;                  1    wreg      void 
   863 ;; Registers used:
   864 ;;		wreg, status,2, status,0
   865 ;; Tracked objects:
   866 ;;		On entry : 0/0
   867 ;;		On exit  : 0/0
   868 ;;		Unchanged: 0/0
   869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   874 ;;Total ram usage:        2 bytes
   875 ;; Hardware stack levels used: 1
   876 ;; This function calls:
   877 ;;		Nothing
   878 ;; This function is called by:
   879 ;;		_EUSART_Initialize
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text8
   884  001214                     __ptext8:
   885                           	callstack 0
   886  001214                     _EUSART_SetFramingErrorHandler:
   887                           	callstack 28
   888  001214                     
   889                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
   890  001214  C001  F010         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
   891  001218  C002  F011         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
   892  00121C  0012               	return		;funcret
   893  00121E                     __end_of_EUSART_SetFramingErrorHandler:
   894                           	callstack 0
   895                           
   896 ;; *************** function _EUSART_SetErrorHandler *****************
   897 ;; Defined at:
   898 ;;		line 165 in file "mcc_generated_files/eusart.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
   901 ;;		 -> EUSART_DefaultErrorHandler(1), 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   916 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   917 ;;Total ram usage:        2 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; This function calls:
   920 ;;		Nothing
   921 ;; This function is called by:
   922 ;;		_EUSART_Initialize
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text9
   927  00121E                     __ptext9:
   928                           	callstack 0
   929  00121E                     _EUSART_SetErrorHandler:
   930                           	callstack 28
   931  00121E                     
   932                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
   933  00121E  C001  F00C         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
   934  001222  C002  F00D         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
   935  001226  0012               	return		;funcret
   936  001228                     __end_of_EUSART_SetErrorHandler:
   937                           	callstack 0
   938                           
   939 ;; *************** function _EUSART_Read *****************
   940 ;; Defined at:
   941 ;;		line 113 in file "mcc_generated_files/eusart.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;		None
   944 ;; Auto vars:     Size  Location     Type
   945 ;;		None
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      unsigned char 
   948 ;; Registers used:
   949 ;;		wreg, status,2
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;Total ram usage:        0 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; This function calls:
   962 ;;		Nothing
   963 ;; This function is called by:
   964 ;;		_main
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text10
   969  001184                     __ptext10:
   970                           	callstack 0
   971  001184                     _EUSART_Read:
   972                           	callstack 30
   973  001184                     l104:
   974                           
   975                           ;mcc_generated_files/eusart.c: 115:     while(!PIR1bits.RC1IF)
   976  001184  AA9E               	btfss	158,5,c	;volatile
   977  001186  EFC7  F008         	goto	u21
   978  00118A  EFC9  F008         	goto	u20
   979  00118E                     u21:
   980  00118E  EFC2  F008         	goto	l104
   981  001192                     u20:
   982  001192                     
   983                           ;mcc_generated_files/eusart.c: 119:     eusartRxLastError.status = 0;
   984  001192  0E00               	movlw	0
   985  001194  6E13               	movwf	_eusartRxLastError^0,c	;volatile
   986  001196                     
   987                           ;mcc_generated_files/eusart.c: 121:     if(1 == RCSTAbits.OERR)
   988  001196  A2AB               	btfss	171,1,c	;volatile
   989  001198  EFD0  F008         	goto	u31
   990  00119C  EFD2  F008         	goto	u30
   991  0011A0                     u31:
   992  0011A0  EFD4  F008         	goto	l892
   993  0011A4                     u30:
   994  0011A4                     
   995                           ;mcc_generated_files/eusart.c: 122:     {;mcc_generated_files/eusart.c: 125:         RCS
      +                          TAbits.CREN = 0;
   996  0011A4  98AB               	bcf	171,4,c	;volatile
   997                           
   998                           ;mcc_generated_files/eusart.c: 126:         RCSTAbits.CREN = 1;
   999  0011A6  88AB               	bsf	171,4,c	;volatile
  1000  0011A8                     l892:
  1001                           
  1002                           ;mcc_generated_files/eusart.c: 129:     return RCREG;
  1003  0011A8  50AE               	movf	174,w,c	;volatile
  1004  0011AA  0012               	return		;funcret
  1005  0011AC                     __end_of_EUSART_Read:
  1006                           	callstack 0
  1007                           
  1008                           	psect	rparam
  1009  0000                     
  1010                           	psect	idloc
  1011                           
  1012                           ;Config register IDLOC0 @ 0x200000
  1013                           ;	unspecified, using default values
  1014  200000                     	org	2097152
  1015  200000  FF                 	db	255
  1016                           
  1017                           ;Config register IDLOC1 @ 0x200001
  1018                           ;	unspecified, using default values
  1019  200001                     	org	2097153
  1020  200001  FF                 	db	255
  1021                           
  1022                           ;Config register IDLOC2 @ 0x200002
  1023                           ;	unspecified, using default values
  1024  200002                     	org	2097154
  1025  200002  FF                 	db	255
  1026                           
  1027                           ;Config register IDLOC3 @ 0x200003
  1028                           ;	unspecified, using default values
  1029  200003                     	org	2097155
  1030  200003  FF                 	db	255
  1031                           
  1032                           ;Config register IDLOC4 @ 0x200004
  1033                           ;	unspecified, using default values
  1034  200004                     	org	2097156
  1035  200004  FF                 	db	255
  1036                           
  1037                           ;Config register IDLOC5 @ 0x200005
  1038                           ;	unspecified, using default values
  1039  200005                     	org	2097157
  1040  200005  FF                 	db	255
  1041                           
  1042                           ;Config register IDLOC6 @ 0x200006
  1043                           ;	unspecified, using default values
  1044  200006                     	org	2097158
  1045  200006  FF                 	db	255
  1046                           
  1047                           ;Config register IDLOC7 @ 0x200007
  1048                           ;	unspecified, using default values
  1049  200007                     	org	2097159
  1050  200007  FF                 	db	255
  1051                           
  1052                           	psect	config
  1053                           
  1054                           ; Padding undefined space
  1055  300000                     	org	3145728
  1056  300000  FF                 	db	255
  1057                           
  1058                           ;Config register CONFIG1H @ 0x300001
  1059                           ;	Oscillator Selection bits
  1060                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1061                           ;	Fail-Safe Clock Monitor Enable bit
  1062                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1063                           ;	Internal/External Oscillator Switchover bit
  1064                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1065  300001                     	org	3145729
  1066  300001  08                 	db	8
  1067                           
  1068                           ;Config register CONFIG2L @ 0x300002
  1069                           ;	Power-up Timer Enable bit
  1070                           ;	PWRT = OFF, PWRT disabled
  1071                           ;	Brown-out Reset Enable bits
  1072                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1073                           ;	Brown Out Reset Voltage bits
  1074                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1075  300002                     	org	3145730
  1076  300002  1F                 	db	31
  1077                           
  1078                           ;Config register CONFIG2H @ 0x300003
  1079                           ;	Watchdog Timer Enable bit
  1080                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1081                           ;	Watchdog Timer Postscale Select bits
  1082                           ;	WDTPS = 32768, 1:32768
  1083  300003                     	org	3145731
  1084  300003  1E                 	db	30
  1085                           
  1086                           ; Padding undefined space
  1087  300004                     	org	3145732
  1088  300004  FF                 	db	255
  1089                           
  1090                           ;Config register CONFIG3H @ 0x300005
  1091                           ;	CCP2 MUX bit
  1092                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1093                           ;	PORTB A/D Enable bit
  1094                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1095                           ;	Low-Power Timer1 Oscillator Enable bit
  1096                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1097                           ;	HFINTOSC Fast Start-up
  1098                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1099                           ;	MCLR Pin Enable bit
  1100                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1101  300005                     	org	3145733
  1102  300005  8B                 	db	139
  1103                           
  1104                           ;Config register CONFIG4L @ 0x300006
  1105                           ;	Stack Full/Underflow Reset Enable bit
  1106                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1107                           ;	Single-Supply ICSP Enable bit
  1108                           ;	LVP = ON, Single-Supply ICSP enabled
  1109                           ;	Extended Instruction Set Enable bit
  1110                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1111                           ;	Background Debugger Enable bit
  1112                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1113  300006                     	org	3145734
  1114  300006  85                 	db	133
  1115                           
  1116                           ; Padding undefined space
  1117  300007                     	org	3145735
  1118  300007  FF                 	db	255
  1119                           
  1120                           ;Config register CONFIG5L @ 0x300008
  1121                           ;	Code Protection Block 0
  1122                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1123                           ;	Code Protection Block 1
  1124                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1125                           ;	Code Protection Block 2
  1126                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1127                           ;	Code Protection Block 3
  1128                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1129  300008                     	org	3145736
  1130  300008  0F                 	db	15
  1131                           
  1132                           ;Config register CONFIG5H @ 0x300009
  1133                           ;	Boot Block Code Protection bit
  1134                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1135                           ;	Data EEPROM Code Protection bit
  1136                           ;	CPD = OFF, Data EEPROM not code-protected
  1137  300009                     	org	3145737
  1138  300009  C0                 	db	192
  1139                           
  1140                           ;Config register CONFIG6L @ 0x30000A
  1141                           ;	Write Protection Block 0
  1142                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1143                           ;	Write Protection Block 1
  1144                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1145                           ;	Write Protection Block 2
  1146                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1147                           ;	Write Protection Block 3
  1148                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1149  30000A                     	org	3145738
  1150  30000A  0F                 	db	15
  1151                           
  1152                           ;Config register CONFIG6H @ 0x30000B
  1153                           ;	Configuration Register Write Protection bit
  1154                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1155                           ;	Boot Block Write Protection bit
  1156                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1157                           ;	Data EEPROM Write Protection bit
  1158                           ;	WRTD = OFF, Data EEPROM not write-protected
  1159  30000B                     	org	3145739
  1160  30000B  E0                 	db	224
  1161                           
  1162                           ;Config register CONFIG7L @ 0x30000C
  1163                           ;	Table Read Protection Block 0
  1164                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1165                           ;	Table Read Protection Block 1
  1166                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1167                           ;	Table Read Protection Block 2
  1168                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1169                           ;	Table Read Protection Block 3
  1170                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1171  30000C                     	org	3145740
  1172  30000C  0F                 	db	15
  1173                           
  1174                           ;Config register CONFIG7H @ 0x30000D
  1175                           ;	Boot Block Table Read Protection bit
  1176                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1177  30000D                     	org	3145741
  1178  30000D  40                 	db	64
  1179                           tosu	equ	0xFFF
  1180                           tosh	equ	0xFFE
  1181                           tosl	equ	0xFFD
  1182                           stkptr	equ	0xFFC
  1183                           pclatu	equ	0xFFB
  1184                           pclath	equ	0xFFA
  1185                           pcl	equ	0xFF9
  1186                           tblptru	equ	0xFF8
  1187                           tblptrh	equ	0xFF7
  1188                           tblptrl	equ	0xFF6
  1189                           tablat	equ	0xFF5
  1190                           prodh	equ	0xFF4
  1191                           prodl	equ	0xFF3
  1192                           indf0	equ	0xFEF
  1193                           postinc0	equ	0xFEE
  1194                           postdec0	equ	0xFED
  1195                           preinc0	equ	0xFEC
  1196                           plusw0	equ	0xFEB
  1197                           fsr0h	equ	0xFEA
  1198                           fsr0l	equ	0xFE9
  1199                           wreg	equ	0xFE8
  1200                           indf1	equ	0xFE7
  1201                           postinc1	equ	0xFE6
  1202                           postdec1	equ	0xFE5
  1203                           preinc1	equ	0xFE4
  1204                           plusw1	equ	0xFE3
  1205                           fsr1h	equ	0xFE2
  1206                           fsr1l	equ	0xFE1
  1207                           bsr	equ	0xFE0
  1208                           indf2	equ	0xFDF
  1209                           postinc2	equ	0xFDE
  1210                           postdec2	equ	0xFDD
  1211                           preinc2	equ	0xFDC
  1212                           plusw2	equ	0xFDB
  1213                           fsr2h	equ	0xFDA
  1214                           fsr2l	equ	0xFD9
  1215                           status	equ	0xFD8

Data Sizes:
    Strings     75
    Constant    0
    Data        0
    BSS         2
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    main@add_line	PTR unsigned char  size(2) Largest target is 4
		 -> STR_3(CODE[4]), 

    main@welcome_msg2	PTR unsigned char  size(2) Largest target is 49
		 -> STR_2(CODE[49]), 

    main@welcome_msg1	PTR unsigned char  size(2) Largest target is 22
		 -> STR_1(CODE[22]), 

    send_string@x	PTR const unsigned char  size(2) Largest target is 49
		 -> STR_3(CODE[4]), STR_2(CODE[49]), STR_1(CODE[22]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMRAM

    _main->_send_string
    _send_string->_EUSART_Write
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0     749
                                              3 COMRAM     8     8      0
                        _EUSART_Read
                  _SYSTEM_Initialize
                        _send_string
 ---------------------------------------------------------------------------------
 (1) _send_string                                          2     0      2     364
                                              1 COMRAM     2     0      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Read                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Read
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _send_string
     _EUSART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      48        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      B      13       1       20.0%
BITBIGSFRhhlh       1D      0       0      37        0.0%
BITBIGSFRlll        1C      0       0      46        0.0%
BITBIGSFRhhllhh     1A      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRhhllhl      C      0       0      40        0.0%
BITBIGSFRlh          9      0       0      44        0.0%
BITBIGSFRhhllhl      7      0       0      39        0.0%
BITBIGSFRhhlll       6      0       0      42        0.0%
BITBIGSFRhl          6      0       0      43        0.0%
BITBIGSFRhhllhl      2      0       0      41        0.0%
BITBIGSFRllh         1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      47        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 02 22:42:15 2023

                                           l25 11D0                                             l41 11F4  
                                           l44 1208                                             l87 1148  
                                           u10 11E2                                             u11 11DE  
                                           u20 1192                                             u21 118E  
                                           u30 11A4                                             u31 11A0  
                                           u70 1182                                             u71 117E  
                                           u87 108C                                            l111 11D4  
                                          l104 1184                                            l114 11E6  
                                          l108 11AA                                            l132 1226  
                                          l126 121C                                            l150 1182  
                                          l129 1212                                            l170 10CE  
                                          l162 10C0                                            l172 10D0  
                                          l165 10C6                                            l158 10BA  
                                          l168 10CC                                            l860 11B8  
                                          l862 11CE                                            l960 121E  
                                          l864 1200                                            l890 11A4  
                                          l970 1144                                            l962 110C  
                                          l858 11AC                                            l892 11A8  
                                          l884 1184                                            l956 1214  
                                          l964 1120                                            l972 11E8  
                                          l876 11D4                                            l980 1160  
                                          l886 1192                                            l958 120A  
                                          l966 112C                                            l974 11F0  
                                          l878 11E2                                            l982 1164  
                                          l990 1062                                            l888 1196  
                                          l968 1138                                            l976 114A  
                                          l992 106A                                            l984 104E  
                                          l978 114E                                            l994 1076  
                                          l986 1052                                            l996 1082  
                                          l988 105A                                            l998 1098  
               ?_EUSART_SetFramingErrorHandler 0001                                            wreg 000FE8  
                                 ?_EUSART_Read 0001                                           l1000 10A4  
                                         l1002 10B0                                           l1006 10D6  
                                         l1016 10EA                                           STR_1 1032  
                                         STR_2 1001                                           STR_3 1048  
                                         _LATA 000F89                                           _LATB 000F8A  
                                         _LATC 000F8B                                           _WPUB 000F7C  
                                         _data 0012                                           _main 104E  
                                         start 0000                                   main@add_line 000A  
                                 ___param_bank 000000                                  ?_EUSART_Write 0001  
                __end_of_OSCILLATOR_Initialize 120A                                          ?_main 0001  
                                        _ANSEL 000F7E                                          _RCREG 000FAE  
                                        _RCSTA 000FAB                                          _SPBRG 000FAF  
                                        _TRISA 000F92                                          _TRISB 000F93  
                                        _TRISC 000F94                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                                          tablat 000FF5  
                                        status 000FD8                                __initialization 11F6  
                                 __end_of_main 110C                                 ??_EUSART_Write 0001  
                                       ??_main 0004                                  __activetblptr 000003  
            _EUSART_DefaultFramingErrorHandler 000000                     _EUSART_OverrunErrorHandler 000E  
                                       _ANSELH 000F7F                                   ?_send_string 0002  
                                       _OSCCON 000FD3                                         _SPBRGH 000FB0  
                                       isa$std 000001                                   __mediumconst 0000  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                              _SYSTEM_Initialize 11E8  
                                   __accesstop 0060                        __end_of__initialization 11FA  
                           ?_SYSTEM_Initialize 0001                                  ___rparam_used 000001  
                               __pcstackCOMRAM 0001                            ??_SYSTEM_Initialize 0003  
              ??_EUSART_SetOverrunErrorHandler 0003                      __end_of_SYSTEM_Initialize 11F6  
                         __end_of_EUSART_Write 11E8                                     __pnvCOMRAM 000C  
                                      _BAUDCON 000FB8                                        _OSCTUNE 000F9B  
                     ??_EUSART_SetErrorHandler 0003                                        __Hparam 0000  
                                      __Lparam 0000                                   __psmallconst 1000  
                                      __pcinit 11F6                                        __ramtop 1000  
                                      __ptext0 104E                                        __ptext1 114A  
                                      __ptext2 11D2                                        __ptext3 11E8  
                                      __ptext4 11AC                                        __ptext5 1200  
                                      __ptext6 110C                                        __ptext7 120A  
                                      __ptext8 1214                                        __ptext9 121E  
                        _OSCILLATOR_Initialize 1200                       ??_PIN_MANAGER_Initialize 0001  
                         end_of_initialization 11FA          __end_of_EUSART_SetOverrunErrorHandler 1214  
                _EUSART_SetOverrunErrorHandler 120A                              _EUSART_Initialize 110C  
                           ?_EUSART_Initialize 0001                                      _RCSTAbits 000FAB  
                          ??_EUSART_Initialize 0003                      __end_of_EUSART_Initialize 114A  
                                    _TXSTAbits 000FAC                     _EUSART_DefaultErrorHandler 000000  
                                 _EUSART_Write 11D2                         ?_OSCILLATOR_Initialize 0001  
                          start_initialization 11F6                                  ??_EUSART_Read 0001  
               ?_EUSART_SetOverrunErrorHandler 0001                     _EUSART_FramingErrorHandler 0010  
                       _EUSART_SetErrorHandler 121E                                    __pbssCOMRAM 0012  
                          __end_of_EUSART_Read 11AC                         _PIN_MANAGER_Initialize 11AC  
                                  __smallconst 1000                                  ??_send_string 0004  
       EUSART_SetErrorHandler@interruptHandler 0001                                       _LATBbits 000F8A  
                            _eusartRxLastError 0013                                       _PIR1bits 000F9E  
              ??_EUSART_SetFramingErrorHandler 0003              _EUSART_DefaultOverrunErrorHandler 000000  
                                  _EUSART_Read 1184                                    _INTCON2bits 000FF1  
                                     __Hrparam 0000                                   send_string@x 0002  
                          __end_of_send_string 1184                                       __Lrparam 0000  
                      ??_OSCILLATOR_Initialize 0001                            _EUSART_ErrorHandler 000C  
                             main@welcome_msg1 0006                               main@welcome_msg2 0008  
                                     __ptext10 1184                        ?_EUSART_SetErrorHandler 0001  
EUSART_SetOverrunErrorHandler@interruptHandler 0001                                       isa$xinst 000000  
        __end_of_EUSART_SetFramingErrorHandler 121E                  _EUSART_SetFramingErrorHandler 1214  
                                   _INTCONbits 000FF2                                    _send_string 114A  
                      ?_PIN_MANAGER_Initialize 0001                 __end_of_EUSART_SetErrorHandler 1228  
EUSART_SetFramingErrorHandler@interruptHandler 0001                             EUSART_Write@txData 0001  
               __end_of_PIN_MANAGER_Initialize 11D2  
